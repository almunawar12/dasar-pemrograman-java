import datamahasiswa.Config;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;

import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable.PrintMode;


public FrameData() {
        initComponents();
        this.TampilData();
    }

    private DefaultTableModel tbl_mahasiswa;
    private String SQL;

    public void TampilData() {
        tbl_mahasiswa = new DefaultTableModel();
        tbl_mahasiswa.addColumn("NIM");
        tbl_mahasiswa.addColumn("NAMA LENGKAP");
        tbl_mahasiswa.addColumn("ALAMAT");
        tbl_mahasiswa.addColumn("NO. HP");
        tbl_mahasiswa.addColumn("PROGRAM STUDI");
        load_table.setModel(tbl_mahasiswa);
        Connection conn = Config.getConnection();
        try {
            java.sql.Statement stmt
                    = conn.createStatement();
            SQL = "select * from mahasiswa";
            java.sql.ResultSet res
                    = stmt.executeQuery(SQL);
            while (res.next()) {
                tbl_mahasiswa.addRow(new Object[]{
                    res.getString("nim"),
                    res.getString("nama_lengkap"),
                    res.getString("alamat"),
                    res.getString("telp"),
                    res.getString("prodi")
                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try {
            // Validasi input data
            String nim = FieldNim.getText();
            String nama = FieldNama.getText();
            String alamat = TextAlamat.getText();
            String telp = FieldTelp.getText();
            String prodi = ComboProdi.getSelectedItem().toString();

            if (nim.isEmpty() || nama.isEmpty() || alamat.isEmpty() || telp.isEmpty() || prodi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua field harus diisi", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan nim adalah angka jika tipe data di database adalah integer
            try {
                Integer.parseInt(nim);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "NIM harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan panjang telp tidak melebihi batas yang diperbolehkan
            if (telp.length() > 15) {
                JOptionPane.showMessageDialog(this, "No. HP terlalu panjang", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Connection conn = Config.getConnection();
            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Failed to connect to the database.", "Database Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            PreparedStatement stmt = conn.prepareStatement("INSERT INTO mahasiswa(nim, nama_lengkap, alamat, telp, prodi) VALUES (?, ?, ?, ?, ?)");
            stmt.setString(1, nim);
            stmt.setString(2, nama);
            stmt.setString(3, alamat);
            stmt.setString(4, telp);
            stmt.setString(5, prodi);

            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("SQL Exception: " + e.getMessage());
            e.printStackTrace();
        }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        Connection conn = Config.getConnection();
        int confirm
                = JOptionPane.showConfirmDialog(null, "Apakah anda yakiningin menghapus data tersebut?", "Konfirmasi",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE
                );
        if (confirm == 0) {
            try {
                java.sql.PreparedStatement stmt
                        = conn.prepareStatement("delete from mahasiswa where nim='" + FieldNim.getText() + "'  ");

                stmt.executeUpdate();
                JOptionPane.showMessageDialog(null,
                        "Data berhasil dihapus", "Pesan",
                        JOptionPane.INFORMATION_MESSAGE);
                TampilData();
                FieldNim.setText("");
                FieldNama.setText("");
                TextAlamat.setText("");
                FieldTelp.setText("");
                ComboProdi.setSelectedItem("");
                FieldNim.requestFocus();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null,
                        "Data gagal di hapus" + e.getMessage(), "Pesan",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try {
            Connection conn = Config.getConnection();
            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Failed to connect to the database.", "Database Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String nim = FieldNim.getText();
            String nama = FieldNama.getText();
            String alamat = TextAlamat.getText();
            String telp = FieldTelp.getText();
            String prodi = ComboProdi.getSelectedItem().toString();

            // Validasi input data
            if (nim.isEmpty() || nama.isEmpty() || alamat.isEmpty() || telp.isEmpty() || prodi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua field harus diisi", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan nim adalah angka jika tipe data di database adalah integer
            try {
                Integer.parseInt(nim);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "NIM harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan panjang telp tidak melebihi batas yang diperbolehkan
            if (telp.length() > 15) {
                JOptionPane.showMessageDialog(this, "No. HP terlalu panjang", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            PreparedStatement stmt = conn.prepareStatement(
                    "UPDATE mahasiswa SET nim = ?, nama_lengkap = ?, alamat = ?, telp = ?, prodi = ? WHERE nim = ?"
            );
            stmt.setString(1, nim);
            stmt.setString(2, nama);
            stmt.setString(3, alamat);
            stmt.setString(4, telp);
            stmt.setString(5, prodi);
            stmt.setString(6, nim); // Set parameter keenam untuk where clause

            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil diubah", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("SQL Exception: " + e.getMessage());
            e.printStackTrace();
        }
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try {
            load_table.print(PrintMode.FIT_WIDTH, new MessageFormat("DATA MAHASISWA"), null);
        } catch (PrinterException ex) {
            Logger.getLogger(FrameData.class.getName()).log(Level.SEVERE, null, ex
            );
        }
    }                                        

    private void load_tableMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        int baris = load_table.getSelectedRow();
        FieldNim.setText(tbl_mahasiswa.getValueAt(baris,
                0).toString());
        FieldNama.setText(tbl_mahasiswa.getValueAt(baris,
                1).toString());
        TextAlamat.setText(tbl_mahasiswa.getValueAt(baris,
                2).toString());
        FieldTelp.setText(tbl_mahasiswa.getValueAt(baris,
                3).toString());
        ComboProdi.setSelectedItem(tbl_mahasiswa.getValueAt(baris, 4).toString()
        );
    }