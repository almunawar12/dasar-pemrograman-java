/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package datamahasiswa;

import datamahasiswa.Config;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;

import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable.PrintMode;

/**
 *
 * @author Lenovo
 */
public class FrameData extends javax.swing.JFrame {

    /**
     * Creates new form FrameData
     */
    public FrameData() {
        initComponents();
        this.TampilData();
    }
    
    private DefaultTableModel tbl_mahasiswa;
    private String SQL;

    public void TampilData() {
        tbl_mahasiswa = new DefaultTableModel();
        tbl_mahasiswa.addColumn("NIM");
        tbl_mahasiswa.addColumn("NAMA LENGKAP");
        tbl_mahasiswa.addColumn("ALAMAT");
        tbl_mahasiswa.addColumn("NO. HP");
        tbl_mahasiswa.addColumn("PROGRAM STUDI");
        load_table.setModel(tbl_mahasiswa);
        Connection conn = Config.getConnection();
        try {
            java.sql.Statement stmt
                    = conn.createStatement();
            SQL = "select * from mahasiswa";
            java.sql.ResultSet res
                    = stmt.executeQuery(SQL);
            while (res.next()) {
                tbl_mahasiswa.addRow(new Object[]{
                    res.getString("nim"),
                    res.getString("nama_lengkap"),
                    res.getString("alamat"),
                    res.getString("telp"),
                    res.getString("prodi")
                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        FieldNim = new javax.swing.JTextField();
        FieldNama = new javax.swing.JTextField();
        FieldTelp = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAlamat = new javax.swing.JTextArea();
        ComboProdi = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        load_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("NIM");

        jLabel2.setText("Nama");

        jLabel3.setText("Alamat");

        jLabel4.setText("No. Hp");

        jLabel5.setText("Program Studi");

        TextAlamat.setColumns(20);
        TextAlamat.setRows(5);
        jScrollPane1.setViewportView(TextAlamat);

        ComboProdi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teknik Industri", "Teknik Informatika", "Teknik Sipil", "Sistem Informasi", "Arsitektur" }));

        load_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NIM", "Nama", "Alamat", "No. Hp", "Program Studi"
            }
        ));
        load_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                load_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(load_table);
        if (load_table.getColumnModel().getColumnCount() > 0) {
            load_table.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton1.setText("Create");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Print");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(FieldNama, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(FieldNim, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ComboProdi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FieldTelp, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4)))))
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(FieldNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(FieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(FieldTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(ComboProdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // Validasi input data
            String nim = FieldNim.getText();
            String nama = FieldNama.getText();
            String alamat = TextAlamat.getText();
            String telp = FieldTelp.getText();
            String prodi = ComboProdi.getSelectedItem().toString();

            if (nim.isEmpty() || nama.isEmpty() || alamat.isEmpty() || telp.isEmpty() || prodi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua field harus diisi", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan nim adalah angka jika tipe data di database adalah integer
            try {
                Integer.parseInt(nim);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "NIM harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan panjang telp tidak melebihi batas yang diperbolehkan
            if (telp.length() > 15) {
                JOptionPane.showMessageDialog(this, "No. HP terlalu panjang", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Connection conn = Config.getConnection();
            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Failed to connect to the database.", "Database Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            PreparedStatement stmt = conn.prepareStatement("INSERT INTO mahasiswa(nim, nama_lengkap, alamat, telp, prodi) VALUES (?, ?, ?, ?, ?)");
            stmt.setString(1, nim);
            stmt.setString(2, nama);
            stmt.setString(3, alamat);
            stmt.setString(4, telp);
            stmt.setString(5, prodi);

            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("SQL Exception: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Connection conn = Config.getConnection();
        int confirm
                = JOptionPane.showConfirmDialog(null, "Apakah anda yakiningin menghapus data tersebut?", "Konfirmasi",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE
                );
        if (confirm == 0) {
            try {
                java.sql.PreparedStatement stmt
                        = conn.prepareStatement("delete from mahasiswa where nim='" + FieldNim.getText() + "'  ");

                stmt.executeUpdate();
                JOptionPane.showMessageDialog(null,
                        "Data berhasil dihapus", "Pesan",
                        JOptionPane.INFORMATION_MESSAGE);
                TampilData();
                FieldNim.setText("");
                FieldNama.setText("");
                TextAlamat.setText("");
                FieldTelp.setText("");
                ComboProdi.setSelectedItem("");
                FieldNim.requestFocus();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null,
                        "Data gagal di hapus" + e.getMessage(), "Pesan",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = Config.getConnection();
            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Failed to connect to the database.", "Database Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String nim = FieldNim.getText();
            String nama = FieldNama.getText();
            String alamat = TextAlamat.getText();
            String telp = FieldTelp.getText();
            String prodi = ComboProdi.getSelectedItem().toString();

            // Validasi input data
            if (nim.isEmpty() || nama.isEmpty() || alamat.isEmpty() || telp.isEmpty() || prodi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua field harus diisi", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan nim adalah angka jika tipe data di database adalah integer
            try {
                Integer.parseInt(nim);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "NIM harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan panjang telp tidak melebihi batas yang diperbolehkan
            if (telp.length() > 15) {
                JOptionPane.showMessageDialog(this, "No. HP terlalu panjang", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            PreparedStatement stmt = conn.prepareStatement(
                    "UPDATE mahasiswa SET nim = ?, nama_lengkap = ?, alamat = ?, telp = ?, prodi = ? WHERE nim = ?"
            );
            stmt.setString(1, nim);
            stmt.setString(2, nama);
            stmt.setString(3, alamat);
            stmt.setString(4, telp);
            stmt.setString(5, prodi);
            stmt.setString(6, nim); // Set parameter keenam untuk where clause

            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil diubah", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("SQL Exception: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            load_table.print(PrintMode.FIT_WIDTH, new MessageFormat("DATA MAHASISWA"), null);
        } catch (PrinterException ex) {
            Logger.getLogger(FrameData.class.getName()).log(Level.SEVERE, null, ex
            );
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void load_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_load_tableMouseClicked
        // TODO add your handling code here:
        int baris = load_table.getSelectedRow();
        FieldNim.setText(tbl_mahasiswa.getValueAt(baris,
                0).toString());
        FieldNama.setText(tbl_mahasiswa.getValueAt(baris,
                1).toString());
        TextAlamat.setText(tbl_mahasiswa.getValueAt(baris,
                2).toString());
        FieldTelp.setText(tbl_mahasiswa.getValueAt(baris,
                3).toString());
        ComboProdi.setSelectedItem(tbl_mahasiswa.getValueAt(baris, 4).toString()
        );
    }//GEN-LAST:event_load_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboProdi;
    private javax.swing.JTextField FieldNama;
    private javax.swing.JTextField FieldNim;
    private javax.swing.JTextField FieldTelp;
    private javax.swing.JTextArea TextAlamat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable load_table;
    // End of variables declaration//GEN-END:variables
}
